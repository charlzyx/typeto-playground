export const FILES = {
  "/index.html": {
    "filePath": "t/index.html",
    "loading": false,
    "value": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div>\n      <h4 style=\"text-decoration: underline\">\n        output of <span id=\"filename\"></span>\n      </h4>\n      <div id=\"code\"></div>\n    </div>\n\n    <script type=\"module\">\n      // 指定确切的版本号\n      import { codeToHtml } from \"https://esm.sh/shiki@1.24.0\";\n      const latest = {\n        current: null,\n      };\n      const code = document.getElementById(\"code\");\n      setInterval(async () => {\n        const current = await fetch(\"/current\").then((resp) => resp.json());\n        const filename = document.getElementById(\"filename\");\n        filename.innerHTML = current.content;\n        if (current.content !== latest.current) {\n          const [filename] = current.content.split(\":\");\n          if (!/\\.ts$/.test(filename)) {\n            latest.current = current.content;\n            code.innerHTML = \"\";\n            return;\n          }\n          query();\n          latest.current = current.content;\n          code.innerHTML = \"transforming...\";\n        }\n      }, 1000);\n\n      const query = async () => {\n        const source = await fetch(\"/output\").then((resp) => resp.json());\n\n        code.innerHTML = await codeToHtml(source.content, {\n          lang: \"js\",\n          theme: \"min-light\",\n        });\n      };\n    </script>\n  </body>\n</html>\n"
  },
  "/oas.ts": {
    "filePath": "t/oas.ts",
    "loading": false,
    "value": "type createPet = {\n  method: \"PUT\";\n  url: \"{{SERVER}}/pet\";\n  resp: Resp<Pet> | Resp<Pet, \"application/xml\">;\n};\n\n// @deprecated in line\ntype deletePet = {\n  method: \"DELETE\";\n  url: \"{{SERVER}}/pet/:petId\";\n  headers: {\n    api_key: string;\n  };\n  path: {\n    petId: Pet[\"id\"];\n  };\n  resp: Reason<\"Invalid pet value\">;\n};\n\n/**\n * @deprecated in js doc\n */\ntype findPetByID = {\n  method: \"GET\";\n  url: \"{{SERVER}}/:petId\";\n  path: {\n    petId: Pet[\"id\"];\n  };\n  resp:\n    | Resp<Pet>\n    | Resp<Pet, \"application/xml\">\n    | Reason<\"Invalid ID supplied\">\n    | Reason<\"Pet not Found\", 404>;\n};\n\ntype findPetByStatus = {\n  method: \"GET\";\n  url: \"{{SERVER}}/findByStatus\";\n  query: Pet[\"status\"];\n  resp:\n    | Resp<Pet>\n    | Resp<Pet, \"application/xml\">\n    | Reason<\"Invalid status value\">;\n};\n\ntype findPetByTags = {\n  method: \"GET\";\n  url: \"{{SERVER}}/findByTags\";\n  query: Pet[\"tags\"];\n  resp:\n    | Resp<Pet>\n    | Resp<Pet, \"application/xml\">\n    | Reason<\"Invalid status value\">;\n};\n\ntype updatePet = {\n  method: \"POST\";\n  url: \"{{SERVER}}/pet\";\n  body: OmitAndRequired<Pet, \"id\", \"name\" | \"photoUrls\">;\n  resp:\n    | Resp<Pet>\n    | Resp<Pet, \"application/xml\">\n    | Reason<\"Pet not found\", 401>\n    | Reason<\"Validation expection\", 422>;\n};\n\ntype updatePetWithForm = {\n  method: \"POST\";\n  url: \"{{SERVER}}/pet/:petId\";\n  path: {\n    petId: Pet[\"id\"];\n  };\n  query: Pick<Pet, \"name\" | \"status\">;\n  resp: Reason<\"Invalid ID supplied\">;\n};\n\ntype updatePetImage = {\n  method: \"POST\";\n  url: \"{{SERVER}}/pet/:petId/uploadImage\";\n  path: {\n    petId: Pet[\"id\"];\n  };\n  /**\n   *  requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n   */\n  body: binary;\n  query: Record<string, string>;\n  resp: Resp<Pet> | Reason<\"Pet not Found\", 404>;\n};\n\ntype placeOrder = {\n  method: \"POST\";\n  url: \"{{SERVER}}/store/order\";\n  body: Order;\n  resp:\n    | Resp<Order>\n    | Reason<\"Invalid input\">\n    | Reason<\"Validation exception\", 422>;\n};\n\ntype getOrderById = {\n  method: \"GET\";\n  url: \"{{SERVER}}/store/order/:orderId\";\n  path: {\n    orderId: Order[\"id\"];\n  };\n  resp:\n    | Resp<Order>\n    | Resp<Order, \"application/xml\">\n    | Reason<\"Invalid ID supplied\">\n    | Reason<\"Order not found\", 404>;\n};\n\ntype getInventory = {\n  method: \"GET\";\n  url: \"{{SERVER}}/store/inventory\";\n  resp: Record<Pet[\"status\"], int32>;\n};\n\ntype deleteOrder = {\n  method: \"DELETE\";\n  url: \"{{SERVER}}/store/order/:orderId\";\n  path: {\n    orderId: Order[\"id\"];\n  };\n  resp: Reason<\"Invalid ID supplied\"> | Reason<\"Order not found\", 404>;\n};\n\ntype createUser = {\n  method: \"POST\";\n  url: \"{{SERVER}}/user\";\n  body: OmitAndRequired<User, \"id\", \"username\" | \"password\">;\n  resp: Resp<User> | Resp<User, \"application/xml\">;\n};\n\ntype createUserList = {\n  method: \"POST\";\n  url: \"{{SERVER}}/user/createWithList\";\n  body: OmitAndRequired<User, \"id\", \"username\" | \"password\">[];\n  resp: Resp<User[]> | Resp<User[], \"application/xml\">;\n};\n\ntype deleteUser = {\n  method: \"DELETE\";\n  url: \"{{SERVER}}/user/:username\";\n  path: {\n    username: User[\"username\"];\n  };\n  resp: Reason<\"INvalid username supplied\"> | Reason<\"User not found\", 404>;\n};\n\ntype getUserByName = {\n  method: \"GET\";\n  url: \"{{SERVER}}/user/:username\";\n  path: {\n    username: User[\"username\"];\n  };\n  resp:\n    | Resp<User>\n    | Resp<User, \"application/xml\">\n    | Reason<\"INvalid username supplied\">\n    | Reason<\"User not found\", 404>;\n};\n\ntype userLogin = {\n  method: \"GET\";\n  url: \"{{SERVER}}/user/login\";\n  query: Pick<User, \"username\" | \"password\">;\n  resp:\n    | Resp<\n        string,\n        \"application/json\",\n        200,\n        {\n          \"X-Rate-Limit\": string;\n          \"X-Expires-After\": string;\n        }\n      >\n    | Resp<\n        string,\n        \"application/xml\",\n        200,\n        {\n          \"X-Rate-Limit\": string;\n          \"X-Expires-After\": string;\n        }\n      >\n    | Reason<\"Invalid username/password supplied \">;\n};\n\ntype userLogout = {\n  method: \"GET\";\n  url: \"{{SERVER}}/user/logout\";\n  resp: Resp<string>;\n};\n\ntype updateUser = {\n  method: \"PUT\";\n  url: \"{{SERVER}}/user/:username\";\n  path: {\n    username: User[\"username\"];\n  };\n  resp:\n    | Resp<string>\n    | Reason<\"INvalid username supplied\">\n    | Reason<\"User not found\", 404>;\n};\n\ntype TreeLike<T> = {\n  id: number;\n  children: TreeLike<T>[];\n};\n\ntype tryCircleRef = {\n  url: \"TEST\";\n  body: TreeLike<{ name: string }>;\n};\ntype int32 = number;\ntype int64 = number;\ntype float = number;\ntype double = number;\ntype date = string;\ntype datetime = string;\ntype password = string;\ntype binary = string;\ntype byte = string;\n\ntype OmitAndRequired<\n  T,\n  OmitedProps extends keyof T,\n  RquiredProps extends keyof T\n> = Omit<Partial<T>, OmitedProps> & Pick<T, RquiredProps>;\n\ntype OmitAndOptional<\n  T,\n  OmitedProps extends keyof T,\n  OptionalProps extends keyof T\n> = Omit<Partial<T>, OmitedProps> & Partial<Pick<T, OptionalProps>>;\n\n// https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\ntype BuiltInHttpHeaders =\n  | \"Accept\"\n  | \"Accept-CH\"\n  | \"Accept-Charset\"\n  | \"Accept-Encoding\"\n  | \"Accept-Language\"\n  | \"Accept-Patch\"\n  | \"Accept-Post\"\n  | \"Accept-Ranges\"\n  | \"Access-Control-Allow-Credentials\"\n  | \"Access-Control-Allow-Headers\"\n  | \"Access-Control-Allow-Methods\"\n  | \"Access-Control-Allow-Origin\"\n  | \"Access-Control-Expose-Headers\"\n  | \"Access-Control-Max-Age\"\n  | \"Access-Control-Request-Headers\"\n  | \"Access-Control-Request-Method\"\n  | \"Age\"\n  | \"Allow\"\n  | \"Alt-Svc\"\n  | \"Alt-Used\"\n  | \"Authorization\"\n  | \"Cache-Control\"\n  | \"Clear-Site-Data\"\n  | \"Connection\"\n  | \"Content-Digest\"\n  | \"Content-Disposition\"\n  | \"Content-Encoding\"\n  | \"Content-Language\"\n  | \"Content-Length\"\n  | \"Content-Location\"\n  | \"Content-Range\"\n  | \"Content-Security-Policy\"\n  | \"Content-Security-Policy-Report-Only\"\n  | \"Content-Type\"\n  | \"Cookie\"\n  | \"Cross-Origin-Embedder-Policy\"\n  | \"Cross-Origin-Opener-Policy\"\n  | \"Cross-Origin-Resource-Policy\"\n  | \"Date\"\n  | \"Device-Memory\"\n  | \"ETag\"\n  | \"Expect\"\n  | \"Expires\"\n  | \"Forwarded\"\n  | \"From\"\n  | \"Host\"\n  | \"If-Match\"\n  | \"If-Modified-Since\"\n  | \"If-None-Match\"\n  | \"If-Range\"\n  | \"If-Unmodified-Since\"\n  | \"Keep-Alive\"\n  | \"Last-Modified\"\n  | \"Link\"\n  | \"Location\"\n  | \"Max-Forwards\"\n  | \"Origin\"\n  | \"Permissions-Policy\"\n  | \"Priority\"\n  | \"Proxy-Authenticate\"\n  | \"Proxy-Authorization\"\n  | \"Range\"\n  | \"Referer\"\n  | \"Referrer-Policy\"\n  | \"Refresh\"\n  | \"Repr-Digest\"\n  | \"Retry-After\"\n  | \"Sec-Fetch-Dest\"\n  | \"Sec-Fetch-Mode\"\n  | \"Sec-Fetch-Site\"\n  | \"Sec-Fetch-User\"\n  | \"Sec-Purpose\"\n  | \"Sec-WebSocket-Accept\"\n  | \"Sec-WebSocket-Extensions\"\n  | \"Sec-WebSocket-Key\"\n  | \"Sec-WebSocket-Protocol\"\n  | \"Sec-WebSocket-Version\"\n  | \"Server\"\n  | \"Server-Timing\"\n  | \"Service-Worker-Navigation-Preload\"\n  | \"Set-Cookie\"\n  | \"SourceMap\"\n  | \"Strict-Transport-Security\"\n  | \"TE\"\n  | \"Timing-Allow-Origin\"\n  | \"Trailer\"\n  | \"Transfer-Encoding\"\n  | \"Upgrade\"\n  | \"Upgrade-Insecure-Requests\"\n  | \"User-Agent\"\n  | \"Vary\"\n  | \"Via\"\n  | \"Want-Content-Digest\"\n  | \"Want-Repr-Digest\"\n  | \"WWW-Authenticate\"\n  | \"X-Content-Type-Options\"\n  | (string & {});\n\n// https://developer.mozilla.org/zh-CN/docs/Web/HTTP/MIME_types\n// https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\n\ntype BuiltInContentType =\n  | \"application/json\"\n  | \"multipart/form-data\"\n  | \"text/plain\"\n  | \"application/octet-stream\"\n  | \"application/xml\"\n  | \"application/x-www-form-urlencoded\"\n  | \"application/pdf\"\n  | \"application/zip\"\n  | \"text/javascript\"\n  | \"text/css\"\n  | \"text/html\"\n  | \"image/apng\"\n  | \"image/avif\"\n  | \"image/gif\"\n  | \"image/jpeg\"\n  | \"image/png\"\n  | \"image/svg+xml\"\n  | \"image/webp\"\n  | \"audio/wave\"\n  | \"audio/wav\"\n  | \"audio/x-wav\"\n  | \"audio/x-pn-wav\"\n  | \"audio/webm\"\n  | \"audio/ogg\"\n  | \"video/webm\"\n  | \"video/ogg\"\n  | \"application/ogg\"\n  | \"multipart/byteranges\"\n  | (string & {});\n// https://editor-next.swagger.io/\ntype Status = \"placed\" | \"approved\" | \"delivered\";\n\nclass Order {\n  id: int64;\n  petId: int64;\n  quantity: int32;\n  shipDate: datetime;\n  status: Status;\n  complete: boolean;\n}\n\nclass Customer {\n  id: int64;\n  username: string;\n  address: Address;\n}\n\nclass Address {\n  street: string;\n  city: string;\n  state: string;\n  zip: number;\n}\n\nclass Category {\n  id: int64;\n  name: string;\n}\n\nclass User {\n  id: int64;\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  phone: string;\n  userStatus: int32;\n}\n\nclass Tag {\n  id: int64;\n  name: string;\n}\n\nclass Pet {\n  /** Pet's id */\n  id: int64 = 0;\n  // getJsDocs() cannot see me\n  category: Category; // but getLeadingCommentRanges/getTrailingCommentRanges can do it!\n  // name with default\n  name: string = \"hi\";\n  /** photos */\n  photoUrls: string[];\n  tags: Tag[];\n  status: Status;\n}\n\n@ignore\nclass Cannot {\n  see: \"ME\";\n  caseBy: \"@ignore\";\n}\ntype Auth = {};\n\ntype PageQuery<T> = T & {\n  pageNo: number;\n  pageSize: number;\n};\n\ntype PageResp<T> = {\n  records: T[];\n  total: number;\n  pageNo?: number;\n  pageSize?: number;\n};\n\ntype Resp<\n  T,\n  ContentType extends BuiltInContentType = \"application/json\",\n  HTTPStateCode = 200,\n  Headers extends Partial<Record<BuiltInHttpHeaders, string>> = {}\n> = {\n  code: int32;\n  data: T;\n  message: string;\n};\n\ntype Reason<\n  T,\n  HTTPStateCode = 400,\n  Headers extends Partial<Record<BuiltInHttpHeaders, string>> = {}\n> = {\n  code: int32;\n  reason: string;\n};\n"
  },
  "/index.js": {
    "filePath": "t/index.js",
    "loading": false,
    "value": "import { serve } from \"@hono/node-server\";\nimport { Hono } from \"hono\";\nimport { Project } from \"ts-morph\";\nimport { transform as transformOAS } from \"@typeto/oas\";\nimport { transform as transformZOD } from \"@typeto/zod\";\nimport { transform as transformFormily } from \"@typeto/formily-schema\";\nimport fs from \"node:fs\";\nimport { html, raw } from \"hono/html\";\n\nconst index = fs.readFileSync(\"./index.html\").toString();\nconst transforms = {\n  get oas() {\n    return transformOAS;\n  },\n  get zod() {\n    return transformZOD;\n  },\n  get \"formily-schema\"() {\n    return transformFormily;\n  },\n};\nconst pool = {\n  oas: new Project(),\n  zod: new Project(),\n  \"formily-schema\": new Project(),\n};\nconst app = new Hono();\napp.get(\"/\", (c) => {\n  return c.html(raw(index));\n});\n\napp.get(\"/current\", (c) => {\n  const current = fs.readFileSync(\"./current\").toString();\n  return c.json({ content: current });\n});\napp.get(\"/output\", (c) => {\n  const current = fs.readFileSync(\"./current\").toString();\n  const [filename] = current.split(\":\");\n  if (!/\\.ts$/.test(filename)) return;\n  console.log(\"transforming :\", current);\n  const [type] = filename.replace(\"/\", \"\").split(\".\");\n  const input = fs.readFileSync(\"./\" + filename).toString();\n\n  const project = pool[type];\n  const transform = transforms[type];\n  project.createSourceFile(type + \".ts\", input, { overwrite: true });\n  const ret = transform(project);\n  const content = typeof ret === \"string\" ? ret : JSON.stringify(ret, null, 2);\n  return c.json({ content });\n});\nserve(app);\n"
  },
  "/current": {
    "filePath": "t/current",
    "loading": false,
    "value": "oas.ts:init"
  },
  "/package-lock.json": {
    "filePath": "t/package-lock.json",
    "loading": false,
    "value": "{\n  \"name\": \"typeto-playground\",\n  \"version\": \"1.0.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"typeto-playground\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@hono/node-server\": \"^1.13.7\",\n        \"@typeto/formily-schema\": \"^1.1.3\",\n        \"@typeto/oas\": \"^1.1.3\",\n        \"@typeto/zod\": \"^1.1.3\",\n        \"hono\": \"^4.6.14\",\n        \"ts-morph\": \"^24.0.0\",\n        \"typescript\": \"^5.7.2\"\n      }\n    },\n    \"node_modules/@hono/node-server\": {\n      \"version\": \"1.13.7\",\n      \"resolved\": \"https://registry.npmjs.org/@hono/node-server/-/node-server-1.13.7.tgz\",\n      \"integrity\": \"sha512-kTfUMsoloVKtRA2fLiGSd9qBddmru9KadNyhJCwgKBxTiNkaAJEwkVN9KV/rS4HtmmNRtUh6P+YpmjRMl0d9vQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=18.14.1\"\n      },\n      \"peerDependencies\": {\n        \"hono\": \"^4\"\n      }\n    },\n    \"node_modules/@ts-morph/common\": {\n      \"version\": \"0.25.0\",\n      \"resolved\": \"https://registry.npmjs.org/@ts-morph/common/-/common-0.25.0.tgz\",\n      \"integrity\": \"sha512-kMnZz+vGGHi4GoHnLmMhGNjm44kGtKUXGnOvrKmMwAuvNjM/PgKVGfUnL7IDvK7Jb2QQ82jq3Zmp04Gy+r3Dkg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"minimatch\": \"^9.0.4\",\n        \"path-browserify\": \"^1.0.1\",\n        \"tinyglobby\": \"^0.2.9\"\n      }\n    },\n    \"node_modules/@typeto/core\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@typeto/core/-/core-1.1.3.tgz\",\n      \"integrity\": \"sha512-pE+9UaYElRrB5R0NBFfHI3/Uh/jC02Ndbu6Rl8jQBrUsrZg1mI2i4Q8LthKvHTwQdhehJ8GzZvqksZcQFVQlkQ==\",\n      \"dependencies\": {\n        \"ts-morph\": \"^24.0.0\",\n        \"typescript\": \"^5.7.2\"\n      }\n    },\n    \"node_modules/@typeto/formily-schema\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@typeto/formily-schema/-/formily-schema-1.1.3.tgz\",\n      \"integrity\": \"sha512-tp6arAizvcaxm6nOUzbbk0mgXbjTThMTxLwKh6Ti1oQZVK1VAQC1CJQa/mZat+OojEu+1NYrFb3MLQrCnOL4Gg==\",\n      \"dependencies\": {\n        \"@typeto/core\": \"1.1.3\"\n      }\n    },\n    \"node_modules/@typeto/oas\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@typeto/oas/-/oas-1.1.3.tgz\",\n      \"integrity\": \"sha512-m/Vai4O6ojv1sGg+cNWCxz+08G0Gp82eXLZOxHlwAtHegB+0KmpcUhn+tCwjyssxXpxLFDwns4+yK3GCW/DpXg==\",\n      \"dependencies\": {\n        \"@typeto/core\": \"1.1.3\"\n      }\n    },\n    \"node_modules/@typeto/zod\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@typeto/zod/-/zod-1.1.3.tgz\",\n      \"integrity\": \"sha512-W+pqenpDMUufnEkVssan+Be5xbU9jZNygmnCaZuU9Y3GrqJ21tibWtrytnLkzMBG2qrOjaFfi/PC3O70pTpyEg==\",\n      \"dependencies\": {\n        \"@typeto/core\": \"1.1.3\",\n        \"zod\": \"^3.22.4\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/code-block-writer\": {\n      \"version\": \"13.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/code-block-writer/-/code-block-writer-13.0.3.tgz\",\n      \"integrity\": \"sha512-Oofo0pq3IKnsFtuHqSF7TqBfr71aeyZDVJ0HpmqB7FBM2qEigL0iPONSCZSO9pE9dZTAxANe5XHG9Uy0YMv8cg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fdir\": {\n      \"version\": \"6.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/fdir/-/fdir-6.4.2.tgz\",\n      \"integrity\": \"sha512-KnhMXsKSPZlAhp7+IjUkRZKPb4fUyccpDrdFXbi4QL1qkmFh9kVY09Yox+n4MaOb3lHZ1Tv829C3oaaXoMYPDQ==\",\n      \"license\": \"MIT\",\n      \"peerDependencies\": {\n        \"picomatch\": \"^3 || ^4\"\n      },\n      \"peerDependenciesMeta\": {\n        \"picomatch\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/hono\": {\n      \"version\": \"4.6.14\",\n      \"resolved\": \"https://registry.npmjs.org/hono/-/hono-4.6.14.tgz\",\n      \"integrity\": \"sha512-j4VkyUp2xazGJ8eCCLN1Vm/bxdvm/j5ZuU9AIjLu9vapn2M44p9L3Ktr9Vnb2RN2QtcR/wVjZVMlT5k7GJQgPw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=16.9.0\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\",\n      \"integrity\": \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/path-browserify\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-browserify/-/path-browserify-1.0.1.tgz\",\n      \"integrity\": \"sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-4.0.2.tgz\",\n      \"integrity\": \"sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/tinyglobby\": {\n      \"version\": \"0.2.10\",\n      \"resolved\": \"https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.10.tgz\",\n      \"integrity\": \"sha512-Zc+8eJlFMvgatPZTl6A9L/yht8QqdmUNtURHaKZLmKBE12hNPSrqNkUp2cs3M/UKmNVVAMFQYSjYIVHDjW5zew==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fdir\": \"^6.4.2\",\n        \"picomatch\": \"^4.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/ts-morph\": {\n      \"version\": \"24.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ts-morph/-/ts-morph-24.0.0.tgz\",\n      \"integrity\": \"sha512-2OAOg/Ob5yx9Et7ZX4CvTCc0UFoZHwLEJ+dpDPSUi5TgwwlTlX47w+iFRrEwzUZwYACjq83cgjS/Da50Ga37uw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@ts-morph/common\": \"~0.25.0\",\n        \"code-block-writer\": \"^13.0.3\"\n      }\n    },\n    \"node_modules/typescript\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.7.2.tgz\",\n      \"integrity\": \"sha512-i5t66RHxDvVN40HfDd1PsEThGNnlMCMT3jMUuoh9/0TaqWevNontacunWyN02LA9/fIbEWlcHZcgTKb9QoaLfg==\",\n      \"license\": \"Apache-2.0\",\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \">=14.17\"\n      }\n    },\n    \"node_modules/zod\": {\n      \"version\": \"3.24.1\",\n      \"resolved\": \"https://registry.npmjs.org/zod/-/zod-3.24.1.tgz\",\n      \"integrity\": \"sha512-muH7gBL9sI1nciMZV67X5fTKKBLtwpZ5VBp1vsOQzj1MhrBZ4wlVCm3gedKZWLp0Oyel8sIGfeiz54Su+OVT+A==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/colinhacks\"\n      }\n    }\n  }\n}\n"
  },
  "/package.json": {
    "filePath": "t/package.json",
    "loading": false,
    "value": "{\n  \"name\": \"typeto-playground\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Say hi!\",\n  \"main\": \"index.js\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"start\": \"node index.js\"\n  },\n  \"dependencies\": {\n    \"@hono/node-server\": \"^1.13.7\",\n    \"@typeto/formily-schema\": \"^1.1.3\",\n    \"@typeto/oas\": \"^1.1.3\",\n    \"@typeto/zod\": \"^1.1.3\",\n    \"hono\": \"^4.6.14\",\n    \"ts-morph\": \"^24.0.0\",\n    \"typescript\": \"^5.7.2\"\n  }\n}\n"
  },
  "/formily-schema.ts": {
    "filePath": "t/formily-schema.ts",
    "loading": false,
    "value": "type int32 = number;\ntype int64 = number;\ntype float = number;\ntype double = number;\n\ntype date = string;\ntype datetime = string;\ntype password = string;\ntype binary = string;\ntype byte = string;\n\ntype Status = \"placed\" | \"approved\" | \"delivered\";\n\nclass Order {\n  id: int64;\n  petId: int64;\n  quantity: int32;\n  shipDate: datetime;\n  status: Status;\n  complete: boolean;\n}\n\nclass Customer {\n  id: int64;\n  username: string;\n  address: Address;\n}\n\nclass Address {\n  street: string;\n  city: string;\n  state: string;\n  zip: number;\n}\n\nclass Category {\n  id: int64;\n  name: string;\n}\n\nclass User {\n  id: int64;\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  phone: string;\n  userStatus: int32;\n}\n\nclass Tag {\n  id: int64;\n  name: string;\n}\n\nclass Pet {\n  /** Pet's id */\n  id: int64 = 0;\n  // getJsDocs() cannot see me\n  category: Category; // but getLeadingCommentRanges/getTrailingCommentRanges can do it!\n  // name with default\n  name: string = \"hi\";\n  /** photos */\n  photoUrls: string[];\n  tags: Tag[];\n  status: Status;\n}\n"
  },
  "/zod.ts": {
    "filePath": "t/zod.ts",
    "loading": false,
    "value": "type int32 = number;\ntype int64 = number;\ntype float = number;\ntype double = number;\n\ntype date = string;\ntype datetime = string;\ntype password = string;\ntype binary = string;\ntype byte = string;\n\ntype Status = \"placed\" | \"approved\" | \"delivered\";\n\nclass Order {\n  id: int64;\n  petId: int64;\n  quantity: int32;\n  shipDate: datetime;\n  status: Status;\n  complete: boolean;\n}\n\nclass Customer {\n  id: int64;\n  username: string;\n  address: Address;\n}\n\nclass Address {\n  street: string;\n  city: string;\n  state: string;\n  zip: number;\n}\n\nclass Category {\n  id: int64;\n  name: string;\n}\n\nclass User {\n  id: int64;\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  phone: string;\n  userStatus: int32;\n}\n\nclass Tag {\n  id: int64;\n  name: string;\n}\n\nclass Pet {\n  /** Pet's id */\n  id: int64 = 0;\n  // getJsDocs() cannot see me\n  category: Category; // but getLeadingCommentRanges/getTrailingCommentRanges can do it!\n  // name with default\n  name: string = \"hi\";\n  /** photos */\n  photoUrls: string[];\n  tags: Tag[];\n  status: Status;\n}\n"
  }
}